/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.dior.admin;

import Business.Conference.Conference;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.BeautyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.DiorAdminOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EmployeeAttendance;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author too
 */
public class Attendance extends javax.swing.JPanel {

    /**
     * Creates new form Attendance
     */
    private JPanel userProcessContainer;
    private BeautyEnterprise beautyenterprise;
    private UserAccount account;
    private DiorAdminOrganization organization;
    private EcoSystem business;
    public Attendance(JPanel userProcessContainer, UserAccount account, DiorAdminOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        beautyenterprise = (BeautyEnterprise)enterprise;
        this.account = account;
        this.business = business;
        this.organization = (DiorAdminOrganization)organization;
        populateConferenceTable();
    }
    
     public void populateConferenceTable(){
        DefaultTableModel model = (DefaultTableModel) ConferenceTable.getModel();
        model.setRowCount(0);
                for(Conference c: beautyenterprise.getConferenceDir().getConferencelist()){
                        Object[] row = new Object[5];
                        row[0] = c;
                        row[1] = c.getName();
                        row[2] = c.getLocation();
                        row[3] = c.getDate();
                        row[4] = c.getTime();
                        model.addRow(row);
                    }
                 
    }
   
    public void populateAttendanceTable(){
        DefaultTableModel model = (DefaultTableModel) AttendanceTable.getModel();
        model.setRowCount(0);
        int conferencerow = ConferenceTable.getSelectedRow();
        if(conferencerow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        Conference c=(Conference)ConferenceTable.getValueAt(conferencerow, 0);
        for(Organization o : beautyenterprise.getOrganizationDirectory().getOrganizationList()){
            for(Employee e: o.getEmployeeDirectory().getEmployeeList()){
                for(WorkRequest request: e.getWorkqueue().getWorkRequestList()){
                    if(((EmployeeAttendance)request).getConferenceId()==c.getID()&&((EmployeeAttendance)request).getAttendancestatus()!=null){
                        Object[] row = new Object[4];
                        row[0] = ((EmployeeAttendance)request).getEmployeeId();
                        row[1] = ((EmployeeAttendance)request).getEname();
                        row[2] = ((EmployeeAttendance)request).getAttendancestatus();
                        row[3] = ((EmployeeAttendance)request).getReason()==null ? null:((EmployeeAttendance)request).getReason();
                        model.addRow(row);
                    }
                }
            }
                
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        AttendanceTable = new javax.swing.JTable();
        ComboBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConferenceTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        AttendanceTable.setBackground(new java.awt.Color(255, 255, 204));
        AttendanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Attendance", "Absent Reason"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(AttendanceTable);
        if (AttendanceTable.getColumnModel().getColumnCount() > 0) {
            AttendanceTable.getColumnModel().getColumn(0).setResizable(false);
            AttendanceTable.getColumnModel().getColumn(1).setResizable(false);
            AttendanceTable.getColumnModel().getColumn(2).setResizable(false);
            AttendanceTable.getColumnModel().getColumn(3).setResizable(false);
        }

        ComboBox.setBackground(new java.awt.Color(255, 204, 204));
        ComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Absentant", "Attendant" }));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ConferenceTable.setBackground(new java.awt.Color(255, 255, 204));
        ConferenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Location", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ConferenceTable);
        if (ConferenceTable.getColumnModel().getColumnCount() > 0) {
            ConferenceTable.getColumnModel().getColumn(0).setResizable(false);
            ConferenceTable.getColumnModel().getColumn(1).setResizable(false);
            ConferenceTable.getColumnModel().getColumn(2).setResizable(false);
            ConferenceTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Conference List:");

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton2.setText("Show attendant");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel3.setText("Attendance");

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel4.setText("Attendant List:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(754, 754, 754))
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(261, 261, 261))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel3)
                .addGap(73, 73, 73)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jButton3)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateAttendanceTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String status = String.valueOf(ComboBox.getSelectedItem());
        if(status.equals("Attendant")){
            populateAttendant();
        }else{
            populateAbsentance();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed
    private void populateAttendant(){
        DefaultTableModel model = (DefaultTableModel) AttendanceTable.getModel();
        model.setRowCount(0);
        int conferencerow = ConferenceTable.getSelectedRow();
        if(conferencerow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        Conference c=(Conference)ConferenceTable.getValueAt(conferencerow, 0);
        for(Organization o : beautyenterprise.getOrganizationDirectory().getOrganizationList()){
            for(Employee e: o.getEmployeeDirectory().getEmployeeList()){
                for(WorkRequest request: e.getWorkqueue().getWorkRequestList()){
                    if(((EmployeeAttendance)request).getConferenceId()==c.getID()&& ((EmployeeAttendance)request).getAttendancestatus().equals("Yes")){
                         Object[] row = new Object[4];
                        row[0] = ((EmployeeAttendance)request).getEmployeeId();
                        row[1] = ((EmployeeAttendance)request).getEname();
                        row[2] = ((EmployeeAttendance)request).getAttendancestatus();
                        row[3] = ((EmployeeAttendance)request).getReason()==null ? null:((EmployeeAttendance)request).getReason();
                        model.addRow(row);
                    }
                }
            }
                
        }
    }
    
     private void populateAbsentance(){
        DefaultTableModel model = (DefaultTableModel) AttendanceTable.getModel();
        model.setRowCount(0);
        int conferencerow = ConferenceTable.getSelectedRow();
        if(conferencerow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        Conference c=(Conference)ConferenceTable.getValueAt(conferencerow, 0);
        for(Organization o : beautyenterprise.getOrganizationDirectory().getOrganizationList()){
            for(Employee e: o.getEmployeeDirectory().getEmployeeList()){
                for(WorkRequest request: e.getWorkqueue().getWorkRequestList()){
                    if(((EmployeeAttendance)request).getConferenceId()==c.getID()&& ((EmployeeAttendance)request).getAttendancestatus().equals("No")){
                         Object[] row = new Object[4];
                        row[0] = ((EmployeeAttendance)request).getEmployeeId();
                        row[1] = ((EmployeeAttendance)request).getEname();
                        row[2] = ((EmployeeAttendance)request).getAttendancestatus();
                        row[3] = ((EmployeeAttendance)request).getReason()==null ? null:((EmployeeAttendance)request).getReason();
                        model.addRow(row);
                    }
                }
            }
                
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AttendanceTable;
    private javax.swing.JComboBox ComboBox;
    private javax.swing.JTable ConferenceTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
