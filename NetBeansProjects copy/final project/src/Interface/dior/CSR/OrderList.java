/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.dior.CSR;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.Enterprise.BeautyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Order.Item;
import Business.Order.Order;
import Business.Organization.AdminOrganization;
import Business.Organization.CSROrganization;
import Business.Organization.DiorAdminOrganization;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.Product.Product;
import Business.UserAccount.UserAccount;

import Business.WorkQueue.OrderReminderRequest;
import Business.WorkQueue.ProductUpdateRequest;
import Business.WorkQueue.WorkRequest;
import Userinterface.customer.itemDetailJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author too
 */
public class OrderList extends javax.swing.JPanel {

    /**
     * Creates new form OrderList
     */
    
     private JPanel userProcessContainer;
    private UserAccount account;
  //  private Customer c;
    private CSROrganization csrOrganization;
    private BeautyEnterprise benterprise;
    private CustomerDirectory customerDir;
   

    OrderList(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Organization Organization, CustomerDirectory customerDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account; 
     //   this.c=c;
        this.csrOrganization = (CSROrganization)Organization;
        this.benterprise=(BeautyEnterprise)enterprise;
        this.customerDir=customerDir;
        populateOrderTable();
        populateDelete();
        populateReturnTable();
    }

    
    public void populateOrderTable(){
        DefaultTableModel model = (DefaultTableModel) orderTbl.getModel();
        
        model.setRowCount(0);
         
        
       for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer customer : org.getCustomerDirectory().getCustomerList()){
            for (Order o : customer.getOrderDir().getOrderList()){{
//            System.out.println(" enterprise"+benterprise);
//            System.out.println("order"+o);
//            System.out.println("orderlist"+customer.getOrderDir().getOrderList());
            Object[] row = new Object[5];
            row[0] = o;
            row[1] = customer.getFname() + " " + customer.getLname();
            row[2] = o.getDateCreated();             
            row[3] = o.getStatues();
            row[4] = o.getTotalprice();
          
            model.addRow(row);
            
            }
       } 
    }
       }}
       
    public void populateReturnTable(){
        DefaultTableModel model = (DefaultTableModel) returnTbl.getModel();
        
        model.setRowCount(0);
         
        
       
       for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer customer : org.getCustomerDirectory().getCustomerList()){
            for (Order o : customer.getOrderDir().getOrderList()){{
             if(o.getStatues().equals("Returned"))  { 
            Object[] row = new Object[5];
            row[0] = o;
            row[1] = o.getLabel();
            row[2] = o.getTrackingNum();             
            row[3] = o.getStatues();
          
            model.addRow(row);
             } 
            }
       } 
    }
       }
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        item = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTbl = new javax.swing.JTable();
        orderdetailBtn = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        orderStatusCombo = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        deleteCombo = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cancelOrderTbl = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        returnTbl = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Order List");

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order INFO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 14))); // NOI18N

        item.setBackground(new java.awt.Color(255, 204, 204));
        item.setText("view item detail");
        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });

        orderTbl.setBackground(new java.awt.Color(255, 255, 204));
        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderId", "Customer", "Date Created", "Status", "total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderTbl);

        orderdetailBtn.setBackground(new java.awt.Color(255, 204, 204));
        orderdetailBtn.setText("view  order detail");
        orderdetailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderdetailBtnActionPerformed(evt);
            }
        });

        itemTable.setBackground(new java.awt.Color(255, 255, 204));
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Quitity", "Sale Price", "Purchasing Price", "TotalRevenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(itemTable);

        orderStatusCombo.setBackground(new java.awt.Color(255, 204, 204));
        orderStatusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Shipped", "Returned" }));

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setText("View all");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(item)
                    .addComponent(orderdetailBtn)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(orderStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(orderdetailBtn)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(item)
                .addGap(41, 41, 41))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delete Request", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 14))); // NOI18N

        deleteCombo.setBackground(new java.awt.Color(255, 204, 204));
        deleteCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Waiting", "Canceled" }));
        deleteCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteComboActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 204, 204));
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(255, 204, 204));
        deleteBtn.setText("Agree Cancel");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 204, 204));
        jButton5.setText("View all");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        cancelOrderTbl.setBackground(new java.awt.Color(255, 255, 204));
        cancelOrderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "OrderId", "Date Request", "Request Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(cancelOrderTbl);
        if (cancelOrderTbl.getColumnModel().getColumnCount() > 0) {
            cancelOrderTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteBtn)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(deleteCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addGap(0, 90, Short.MAX_VALUE))))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Returned Order", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 14))); // NOI18N

        returnTbl.setBackground(new java.awt.Color(255, 255, 204));
        returnTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "OrderId", "Label", "Tracking num", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(returnTbl);

        jButton6.setBackground(new java.awt.Color(255, 204, 204));
        jButton6.setText("View Detail");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(42, 42, 42))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
       
        int selectedrow = cancelOrderTbl.getSelectedRow();
        if(selectedrow<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
         
        
        OrderReminderRequest request = (OrderReminderRequest)cancelOrderTbl.getValueAt(selectedrow, 0);
        
        if(request.getStatus().equals("Canceled")){
        JOptionPane.showMessageDialog(null, "The order has already been deleted", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        request.setDeleteStatus("Canceled");
        request.setStatus("Canceled");
        request.setDeleteMessage("Delete sucessfully");
        request.setMessage("Delete sucessfully");
        
        
         
        
      for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer c : org.getCustomerDirectory().getCustomerList()){
            for(Order o : c.getOrderDir().getOrderList()){
                if(o.getOrderId() == request.getOrderId()){
                   c.getOrderDir().getOrderList().remove(o); 
                   for(Item i : o.getOrderItemList()){
                  i.getProduct().setAvailNum(i.getQuatity()+i.getProduct().getAvailNum());
                    }
                  break;
                }
                
            }
        }
      } 
      populateDelete();
      populateOrderTable();  
        
        
                
            
        
        
    
        
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(orderStatusCombo.getSelectedItem().equals("Pending")){
             DefaultTableModel model = (DefaultTableModel) orderTbl.getModel();
        
        model.setRowCount(0);
         
        
       
      for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer customer : org.getCustomerDirectory().getCustomerList()){
            for (Order o : customer.getOrderDir().getOrderList()){{
             if(o.getStatues().equals("pending")){
            Object[] row = new Object[5];
            row[0] = o;
            row[1] = customer.getFname() + " " + customer.getLname();
            row[2] = o.getDateCreated();             
            row[3] = o.getStatues();
          
            model.addRow(row);
             }   
          
            }
       } 
    }
      }
        }else if(orderStatusCombo.getSelectedItem().equals("Shipped")){
            DefaultTableModel model = (DefaultTableModel) orderTbl.getModel();
        
        model.setRowCount(0);
         
        
       
      for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer customer : org.getCustomerDirectory().getCustomerList()){
            for (Order o : customer.getOrderDir().getOrderList()){{
             if(o.getStatues().equals("Shipped")){
            Object[] row = new Object[5];
            row[0] = o;
            row[1] = customer.getFname() + " " + customer.getLname();
            row[2] = o.getDateCreated();             
            row[3] = o.getStatues();
          
            model.addRow(row);
             }   
          
            }
       } 
    }
      }
        }else if(orderStatusCombo.getSelectedItem().equals("Returned")){
            DefaultTableModel model = (DefaultTableModel) orderTbl.getModel();
        
        model.setRowCount(0);
         
        
       
       for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer customer : org.getCustomerDirectory().getCustomerList()){
            for (Order o : customer.getOrderDir().getOrderList()){{
             if(o.getStatues().equals("Returned")){
            Object[] row = new Object[5];
            row[0] = o;
            row[1] = customer.getFname() + " " + customer.getLname();
            row[2] = o.getDateCreated();             
            row[3] = o.getStatues();
          
            model.addRow(row);
             }   
          
            }
       } 
    }
        }
        }   
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void orderdetailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderdetailBtnActionPerformed
        // TODO add your handling code here:
       int selectedrow = orderTbl.getSelectedRow();
        if(selectedrow<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Order order = (Order)orderTbl.getValueAt(selectedrow, 0);
        int id = order.getOrderId();
        DefaultTableModel model = (DefaultTableModel) itemTable.getModel();
        model.setRowCount(0);
        
        
       for(Organization org : benterprise.getOrganizationDirectory().getOrganizationList()){
       for(Customer customer : org.getCustomerDirectory().getCustomerList()){
            for(Order o : customer.getOrderDir().getOrderList()){
                if(o.getOrderId()==id){
                    for(Item item : o.getOrderItemList()){
                    Object[] row = new Object[5];
                    row[0] = item.getProduct();
                    row[1] = item.getQuatity();
                    row[2] = item.getProduct().getSalesPrice();
                    row[3] = item.getProduct().getPurchasingPrice();
                    row[4] = item.getQuatity() * (item.getProduct().getSalesPrice()-item.getProduct().getPurchasingPrice());
                    model.addRow(row);                      
                }
                   
                    } 
                
            }
        }
       }
        
        
        
        
    }//GEN-LAST:event_orderdetailBtnActionPerformed

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        // TODO add your handling code here:
          int row = itemTable.getSelectedRow();
        if(row<0) {
             JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Product p = (Product)itemTable.getValueAt(row, 0);
         
        
        
        productDetail pd = new productDetail(userProcessContainer,benterprise,p);
        userProcessContainer.add("productDetail", pd);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
        
    }//GEN-LAST:event_itemActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateOrderTable();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void deleteComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteComboActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(deleteCombo.getSelectedItem().equals("Waiting")){
            DefaultTableModel model = (DefaultTableModel) cancelOrderTbl.getModel();
            model.setRowCount(0);  
            
         for(Organization org:benterprise.getOrganizationDirectory().getOrganizationList()){
           if(org instanceof CSROrganization){    
       for(WorkRequest request : csrOrganization.getWorkQueue().getWorkRequestList()){
           if(request instanceof OrderReminderRequest ){
          
           if(((OrderReminderRequest)request).getDeleteStatus().equals("Waiting")){
               
            Object[] row = new Object[4];
            row[0] = (OrderReminderRequest)request;
            row[1] = ((OrderReminderRequest)request).getRequestCreated();
            row[2] = ((OrderReminderRequest)request).getDeleteMessage();
            row[3] = ((OrderReminderRequest)request).getDeleteStatus();
            model.addRow(row);  
    }
       }}}
       }
        }else if(deleteCombo.getSelectedItem().equals("Canceled")){
              DefaultTableModel model = (DefaultTableModel) cancelOrderTbl.getModel();
              model.setRowCount(0);
        for(Organization org:benterprise.getOrganizationDirectory().getOrganizationList()){
           if(org instanceof CSROrganization){       
       for(WorkRequest request : csrOrganization.getWorkQueue().getWorkRequestList()){
           if(request instanceof OrderReminderRequest ){
           if(((OrderReminderRequest)request).getDeleteStatus().equals("Canceled")){
            Object[] row = new Object[4];
            row[0] = (OrderReminderRequest)request;
            row[1] = ((OrderReminderRequest)request).getRequestCreated();
            row[2] = ((OrderReminderRequest)request).getDeleteMessage();
            row[3] = ((OrderReminderRequest)request).getDeleteStatus();
            model.addRow(row);  
    }
       }
        }
        
        }  
        
        }}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        populateDelete();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
          int row = returnTbl.getSelectedRow();
        if(row<0) {
             JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Order o = (Order)returnTbl.getValueAt(row, 0);
         
        
        
        ReturnDetailJPanel rd = new ReturnDetailJPanel(userProcessContainer,benterprise,o);
        userProcessContainer.add("ReturnDetailJPanel", rd);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed
  
  
   public void populateDelete(){
       DefaultTableModel model = (DefaultTableModel) cancelOrderTbl.getModel();
       model.setRowCount(0); 
       
       for(Organization org:benterprise.getOrganizationDirectory().getOrganizationList()){
           if(org instanceof CSROrganization){
       for(WorkRequest reques : org.getWorkQueue().getWorkRequestList()){
            if (reques instanceof OrderReminderRequest){  
            Object[] row = new Object[4];
           
            row[0] = (OrderReminderRequest)reques;
            row[1] = ((OrderReminderRequest)reques).getRequestCreated();
            row[2] = ((OrderReminderRequest)reques).getDeleteMessage();
            row[3] = ((OrderReminderRequest)reques).getStatus();
            model.addRow(row);  
        }
    }
  }
   }
   }
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cancelOrderTbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> deleteCombo;
    private javax.swing.JButton item;
    private javax.swing.JTable itemTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> orderStatusCombo;
    private javax.swing.JTable orderTbl;
    private javax.swing.JButton orderdetailBtn;
    private javax.swing.JTable returnTbl;
    // End of variables declaration//GEN-END:variables
}
