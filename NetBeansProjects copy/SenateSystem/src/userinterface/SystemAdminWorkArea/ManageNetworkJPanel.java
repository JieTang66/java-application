/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Network.Network;
//import com.teamdev.jxbrowser.chromium.Browser;
//import com.teamdev.jxbrowser.chromium.swing.BrowserView;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public ManageNetworkJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateNetworkTable();
    }

    private void populateNetworkTable() {
      
        DefaultTableModel model = (DefaultTableModel) networkJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            Object[] row = new Object[1];
            row[0] = network.getName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        map = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setPreferredSize(new java.awt.Dimension(900, 600));
        setLayout(null);

        networkJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkJTable);
        if (networkJTable.getColumnModel().getColumnCount() > 0) {
            networkJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(270, 50, 404, 90);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Name");
        add(jLabel1);
        jLabel1.setBounds(280, 180, 100, 40);

        submitJButton.setBackground(new java.awt.Color(255, 255, 255));
        submitJButton.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton);
        submitJButton.setBounds(570, 250, 110, 50);

        backJButton.setBackground(new java.awt.Color(255, 255, 255));
        backJButton.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        backJButton.setText("back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(270, 250, 110, 50);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Please select a province / city--", "Tokyo", "Delhi", "Shanghai", "Sao Paulo", "Mexico City", "Cairo", "Dhaka", "Mumbai", "Beijing", "Osaka" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1);
        jComboBox1.setBounds(400, 190, 275, 27);

        map.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SystemAdminWorkArea/WechatIMG79.jpeg"))); // NOI18N
        add(map);
        map.setBounds(0, 0, 900, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String name = (String) jComboBox1.getSelectedItem();
        if(name.equals("Tokyo")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/tokyo.jpg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Delhi")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Delhi.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Shanghai")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Shanghai.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Sao Paulo")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Sao Paulo.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Mexico City")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Mexico City.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Cairo")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Cairo.jpeg");
            //icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Dhaka")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Dhaka.jpeg");
            //icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Mumbai")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Mumbai.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Beijing")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Beijing.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("Osaka")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/Osaka.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        if(name.equals("--Please select a province / city--")){
            ImageIcon icon = new ImageIcon("/Users/wangqijia/Desktop/19fall/AED Final/SenateSystem 3 add/src/userinterface/SystemAdminWorkArea/WechatIMG79.jpeg");
           // icon.setImage(icon.getImage().getScaledInstance(500,300,Image.SCALE_DEFAULT));  
            map.setIcon(icon);
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        String name = (String) jComboBox1.getSelectedItem();
        if(name==null||name.equals("")||name.equals("--Please select a province / city--")){
            JOptionPane.showMessageDialog(null, "name can not be empty");
            return;
        }
        Network net=new Network();
        net.setName(name);
        if(system.getNetworkList().contains(net)){
            JOptionPane.showMessageDialog(null, "network name has exist");
            return;
        }

        Network network = system.createAndAddNetwork();
        network.setName(name);

        populateNetworkTable();
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel map;
    private javax.swing.JTable networkJTable;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
