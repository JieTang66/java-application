/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Client.Client;
import Business.Client.ClientDirectory;
import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageSEmployeeJPanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageSEmployeeJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
        popDieaseJComboBox();
    }
    
    public void popDieaseJComboBox() {
        DieaseJComboBox.removeAllItems();
        String[] diease = {"No diease","heart diease","Lung cancer","Brain cancer","fracture"};
        for (String d: diease)  {
            DieaseJComboBox.addItem(d);
        }
    }
    
    public void populateOrganizationComboBox(){
        organizationJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationJComboBox.addItem(organization);
        }
    }
    
    public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationEmpJComboBox.addItem(organization);
        }
    }

    private void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            Object[] row = new Object[2];
            row[0] = employee.getId();
            row[1] = employee.getName();
            model.addRow(row);
        }
    }
    
    private void populate(ClientDirectory clientD){
        for (Client client: clientD.getClientList()){
                nameJTextField.setText(client.getClientName());
                Age.setText(String.valueOf(client.getAge()));
                Height.setText(String.valueOf(client.getHeight()));
                Weight.setText(String.valueOf(client.getWeight()));
                BloodPressure.setText(String.valueOf(client.getBloodPressure()));
                Diease.setText(client.getDieaseName());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Age = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Height = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Weight = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        DieaseJComboBox = new javax.swing.JComboBox();
        Diease = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BloodPressure = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(110, 60, 670, 92);

        addJButton.setBackground(new java.awt.Color(255, 255, 255));
        addJButton.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        addJButton.setText("Create Employee");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton);
        addJButton.setBounds(510, 460, 260, 70);

        organizationJComboBox.setFont(new java.awt.Font("Silom", 0, 14)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox);
        organizationJComboBox.setBounds(390, 30, 173, 27);

        jLabel1.setFont(new java.awt.Font("Silom", 0, 14)); // NOI18N
        jLabel1.setText("Organization");
        add(jLabel1);
        jLabel1.setBounds(260, 30, 110, 20);

        backJButton.setBackground(new java.awt.Color(255, 255, 255));
        backJButton.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(110, 460, 140, 70);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel2.setText("Name");
        add(jLabel2);
        jLabel2.setBounds(110, 210, 70, 40);

        nameJTextField.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        nameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextFieldActionPerformed(evt);
            }
        });
        add(nameJTextField);
        nameJTextField.setBounds(270, 210, 120, 40);

        organizationEmpJComboBox.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationEmpJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationEmpJComboBoxActionPerformed(evt);
            }
        });
        add(organizationEmpJComboBox);
        organizationEmpJComboBox.setBounds(270, 170, 160, 27);

        jLabel3.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel3.setText("Organization");
        add(jLabel3);
        jLabel3.setBounds(110, 160, 130, 40);

        jLabel8.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel8.setText("Age");
        add(jLabel8);
        jLabel8.setBounds(110, 270, 60, 40);

        Age.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        Age.setEnabled(false);
        Age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgeActionPerformed(evt);
            }
        });
        add(Age);
        Age.setBounds(270, 270, 120, 40);

        jLabel6.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel6.setText("Height");
        add(jLabel6);
        jLabel6.setBounds(110, 330, 90, 30);

        Height.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        Height.setEnabled(false);
        add(Height);
        Height.setBounds(270, 330, 120, 40);

        jLabel7.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel7.setText("Weight");
        add(jLabel7);
        jLabel7.setBounds(110, 390, 80, 30);

        Weight.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        Weight.setEnabled(false);
        Weight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeightActionPerformed(evt);
            }
        });
        add(Weight);
        Weight.setBounds(270, 390, 120, 40);

        jLabel11.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel11.setText("Diease");
        add(jLabel11);
        jLabel11.setBounds(440, 340, 70, 20);

        DieaseJComboBox.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        DieaseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DieaseJComboBox.setEnabled(false);
        add(DieaseJComboBox);
        DieaseJComboBox.setBounds(520, 330, 160, 40);

        Diease.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        Diease.setEnabled(false);
        add(Diease);
        Diease.setBounds(700, 330, 170, 40);

        jLabel9.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        jLabel9.setText("Blood pressure");
        add(jLabel9);
        jLabel9.setBounds(440, 390, 170, 40);

        BloodPressure.setFont(new java.awt.Font("Silom", 0, 18)); // NOI18N
        BloodPressure.setEnabled(false);
        BloodPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BloodPressureActionPerformed(evt);
            }
        });
        add(BloodPressure);
        BloodPressure.setBounds(650, 390, 120, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/Nursing-homes-carousel-1068x601.jpg"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(0, 0, 910, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        String name = nameJTextField.getText();
        if(name==null||name.equals("")){
            nameJTextField.setBorder(BorderFactory.createLineBorder(Color.red));
            jLabel2.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "name can not be empty");
            return;
        } 
        
        
        if (organizationEmpJComboBox.getSelectedItem().toString().equals(Organization.Type.Client.getValue().toString())){ //&&!type.getValue().equals(Type.Dietitian.getValue())){
            if(nameJTextField.getText()==null||nameJTextField.getText().equals("")){
                nameJTextField.setBorder(BorderFactory.createLineBorder(Color.red));
                jLabel2.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "ClientName can not be empty");
                return;
            }
            if(Age.getText()==null||Age.getText().equals("")){
                Age.setBorder(BorderFactory.createLineBorder(Color.red));
                jLabel8.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Age can not be empty");
                return;
            }
            if(BloodPressure.getText()==null||BloodPressure.getText().equals("")){
                BloodPressure.setBorder(BorderFactory.createLineBorder(Color.red));
                jLabel9.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "BloodPressure can not be empty");
                return;
            }
            if(Height.getText()==null||Height.getText().equals("")){
                Height.setBorder(BorderFactory.createLineBorder(Color.red));
                jLabel6.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Height can not be empty");
                return;
            }
            if(Weight.getText()==null||Weight.getText().equals("")){
                Weight.setBorder(BorderFactory.createLineBorder(Color.red));
                jLabel7.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Weight can not be empty");
                return;
            }

            try{
                Integer.parseInt(Age.getText());
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please type in a number for Age");
                return;
            }
            try{
                Integer.parseInt(BloodPressure.getText());
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please type in a number for BloodPressure");
                return;
            }
            try{
                Integer.parseInt(Height.getText());
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please type in a number for Height");
                return;
            }
            try{
                Integer.parseInt(Weight.getText());
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please type in a number for Weight");
                return;
            }
            organization.getEmployeeDirectory().createEmployee(name);
            organization.getClientDirectory().createClient(nameJTextField.getText(),Integer.valueOf(Age.getText()),Integer.valueOf(BloodPressure.getText()),String.valueOf(DieaseJComboBox.getSelectedItem()),Integer.valueOf(Height.getText()),Integer.valueOf(Weight.getText()));
            //System.out.println(organization.getClientDirectory().getClientList().toString());
            populate(organization.getClientDirectory());
            return;
               
        }else{
            organization.getEmployeeDirectory().createEmployee(name);
            populateTable(organization);
            return;
        }    
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null){
            populateTable(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void nameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameJTextFieldActionPerformed

    private void AgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AgeActionPerformed

    private void WeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WeightActionPerformed

    private void BloodPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BloodPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BloodPressureActionPerformed

    private void organizationEmpJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationEmpJComboBoxActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        if (organization != null){
            
                if (organizationEmpJComboBox.getSelectedItem().toString().equals(Organization.Type.Client.getValue().toString())){ //&&!type.getValue().equals(Type.Dietitian.getValue())){
                    Age.setEnabled(true);
                    Height.setEnabled(true);
                    Weight.setEnabled(true);
                    DieaseJComboBox.setEnabled(true);
                    BloodPressure.setEnabled(true);
                    
                } else{
                    Age.setEnabled(false);
                    Height.setEnabled(false);
                    Weight.setEnabled(false);
                    DieaseJComboBox.setEnabled(false);
                    BloodPressure.setEnabled(false);
                    Age.setText("");
                    Height.setText("");
                    Weight.setText("");
                    popDieaseJComboBox();
                    Diease.setText("");
                    BloodPressure.setText("");
                }  
            
            
        }
    }//GEN-LAST:event_organizationEmpJComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Age;
    private javax.swing.JTextField BloodPressure;
    private javax.swing.JTextField Diease;
    private javax.swing.JComboBox DieaseJComboBox;
    private javax.swing.JTextField Height;
    private javax.swing.JTextField Weight;
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    // End of variables declaration//GEN-END:variables
}
